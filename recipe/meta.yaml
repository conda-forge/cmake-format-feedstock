{% set name = "cmake-format" %}
{% set version = "0.6.13" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/cheshirekow/cmake_format/archive/refs/tags/v{{ version }}.tar.gz
  sha256: aa3d0e6156bcd4ae8fbd630ccb1d4995179b37b1b31923f2eb53764104da75f3

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv
  entry_points:
    - cmake-annotate = cmake_format.annotate:main
    - cmake-format = cmake_format.__main__:main
    - cmake-lint = cmake_lint.__main__:main
    - cmake-genparsers = cmake_format.genparsers:main
    - ctest-to = cmake_format.ctest_to:main

requirements:
  host:
    - python
    - pip
  run:
    - python
    - six >=1.13.0
    - pyyaml >=5.3
    - jinja2 >=2.10.3

test:
  imports:
    - cmake_format
    - cmake_lint
  commands:
    - cmake-format -h
    - cmake-lint -h
    - cmake-annotate -h
    - cmake-genparsers -h
    - ctest-to -h

about:
  home: https://github.com/cheshirekow/cmake_format
  license: GPL-3.0-only
  license_family: GPL
  license_file: LICENSE.txt
  summary: Source code formatter for cmake listfiles

  description: |
    The cmake-format project provides Quality Assurance (QA) tools for cmake.
    * cmake-annotate can generate pretty HTML from your listfiles
    * cmake-format can format your listfiles nicely so that they don't
      look like crap.
    * cmake-lint can check your listfiles for problems
    * ctest-to can parse a ctest output tree and translate it into a more
      structured format (either JSON or XML).
  doc_url: https://cmake-format.readthedocs.io/
  dev_url: https://github.com/cheshirekow/cmake_format

extra:
  recipe-maintainers:
    - avrahamshukron
    - xhochy
